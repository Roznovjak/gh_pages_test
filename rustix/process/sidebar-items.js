initSidebarItems({"constant":[["EXIT_FAILURE","`EXIT_FAILURE` for use with `exit`."],["EXIT_SIGNALED_SIGABRT","The exit status used by a process terminated with `SIGABRT` signal."],["EXIT_SUCCESS","`EXIT_SUCCESS` for use with `exit`."]],"enum":[["Resource","A resource value for use with `getrlimit`."]],"fn":[["chdir","`chdir(path)`—Change the working directory."],["fchdir","`fchdir(fd)`—Change the working directory."],["getcwd","`getcwd()`"],["getegid","`getegid()`—Returns the process’ effective group ID."],["geteuid","`geteuid()`—Returns the process’ effective user ID."],["getgid","`getgid()`—Returns the process’ real group ID."],["getpid","`getpid()`—Returns the process’ ID."],["getppid","`getppid()`—Returns the parent process’ ID."],["getpriority_pgrp","`getpriority(PRIO_PGRP, gid)`—Get the scheduling priority of the given process group."],["getpriority_process","`getpriority(PRIO_PROCESS, pid)`—Get the scheduling priority of the given process."],["getpriority_user","`getpriority(PRIO_USER, uid)`—Get the scheduling priority of the given user."],["getrlimit","`getrlimit(resource)`—Get a process resource limit value."],["getuid","`getuid()`—Returns the process’ real user ID."],["nice","`nice()`—Adjust the scheduling priority of the current process."],["page_size","`getpagesize()`—Returns the process’ page size."],["sched_yield","`sched_yield()`—Hints to the OS that other processes should run."],["setpriority_pgrp","`setpriority(PRIO_PGRP, pgid)`—Get the scheduling priority of the given process group."],["setpriority_process","`setpriority(PRIO_PROCESS, pid)`—Get the scheduling priority of the given process."],["setpriority_user","`setpriority(PRIO_USER, uid)`—Get the scheduling priority of the given user."],["uname","`uname()`—Returns high-level information about the runtime OS and hardware."],["wait","`wait(waitopts)`—Wait for any of the children of calling process to change state."],["waitpid","`waitpid(pid, waitopts)`—Wait for a specific process to change state."]],"struct":[["Gid","`gid_t`—A Unix group ID."],["Pid","`pid_t`—A non-zero Unix process ID."],["Rlimit","`struct rlimit`—Current and maximum values used in [`getrlimit`]."],["Uid","`uid_t`—A Unix user ID."],["Uname","`struct utsname`—Return type for [`uname`]."],["WaitOptions","Options for modifying the behavior of wait/waitpid"],["WaitStatus","the status of the child processes the caller waited on"]],"type":[["RawGid","A group identifier as a raw integer."],["RawNonZeroPid","A non-zero process identifier as a raw non-zero integer."],["RawPid","A process identifier as a raw integer."],["RawUid","A user identifier as a raw integer."]]});